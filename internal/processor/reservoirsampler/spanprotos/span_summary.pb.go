// Code generated by protoc-gen-go. DO NOT EDIT.
// Stub implementation for the span_summary.proto file

package spanprotos

import (
	"fmt"

	"github.com/golang/protobuf/proto"
)

// ReservoirState represents the state of the reservoir sampler
type ReservoirState struct {
	CurrentWindow   int64 `protobuf:"varint,1,opt,name=current_window,json=currentWindow,proto3" json:"current_window,omitempty"`
	WindowStartTime int64 `protobuf:"varint,2,opt,name=window_start_time,json=windowStartTime,proto3" json:"window_start_time,omitempty"`
	WindowEndTime   int64 `protobuf:"varint,3,opt,name=window_end_time,json=windowEndTime,proto3" json:"window_end_time,omitempty"`
	WindowCount     int64 `protobuf:"varint,4,opt,name=window_count,json=windowCount,proto3" json:"window_count,omitempty"`
}

// SpanWithResourceSummary represents a serialized SpanWithResource
type SpanWithResourceSummary struct {
	SpanData     []byte `protobuf:"bytes,1,opt,name=span_data,json=spanData,proto3" json:"span_data,omitempty"`
	ResourceData []byte `protobuf:"bytes,2,opt,name=resource_data,json=resourceData,proto3" json:"resource_data,omitempty"`
	ScopeData    []byte `protobuf:"bytes,3,opt,name=scope_data,json=scopeData,proto3" json:"scope_data,omitempty"`
}

// Reset resets the state of the ReservoirState
func (x *ReservoirState) Reset() {
	*x = ReservoirState{}
}

// String returns a string representation of the ReservoirState
func (x *ReservoirState) String() string {
	return fmt.Sprintf("ReservoirState{CurrentWindow: %d, WindowStartTime: %d, WindowEndTime: %d, WindowCount: %d}",
		x.CurrentWindow, x.WindowStartTime, x.WindowEndTime, x.WindowCount)
}

// ProtoMessage implements the proto.Message interface
func (*ReservoirState) ProtoMessage() {}

// Reset resets the state of the SpanWithResourceSummary
func (x *SpanWithResourceSummary) Reset() {
	*x = SpanWithResourceSummary{}
}

// String returns a string representation of the SpanWithResourceSummary
func (x *SpanWithResourceSummary) String() string {
	return fmt.Sprintf("SpanWithResourceSummary{SpanData: %d bytes, ResourceData: %d bytes, ScopeData: %d bytes}",
		len(x.SpanData), len(x.ResourceData), len(x.ScopeData))
}

// ProtoMessage implements the proto.Message interface
func (*SpanWithResourceSummary) ProtoMessage() {}

// Marshal marshals a ReservoirState to binary format
func (x *ReservoirState) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

// Unmarshal unmarshals a ReservoirState from binary format
func (x *ReservoirState) Unmarshal(data []byte) error {
	return proto.Unmarshal(data, x)
}

// Marshal marshals a SpanWithResourceSummary to binary format
func (x *SpanWithResourceSummary) Marshal() ([]byte, error) {
	return proto.Marshal(x)
}

// Unmarshal unmarshals a SpanWithResourceSummary from binary format
func (x *SpanWithResourceSummary) Unmarshal(data []byte) error {
	return proto.Unmarshal(data, x)
}
